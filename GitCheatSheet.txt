git init -- створити пустий репозиторій в папці
git status -- перевірити статус репозиторія
git add fILENAME -- перевести обраний файл в stage стадію
git add . -- перевести всі зміни в stage стадію
git commit -- зліпок поточних файлів з їх змінами
git commit -m "MESSAGE"  -- зразу ввести опис коміту
git log -- показати інформацію про коміт
git checkout COMMIT_ID -- перевести файли в стан іншого коміту 
git checkout BRANCH_NAME -- перейти у вказану гілку
git branch -- показати існуючі гілки
git branch BRANCH_NAME -- створити нову гілку від поточної гілки
git push -- скопіювати локальний репозиторія у віддалений
git pull -- скопіювати зміни у віддаленому репозиторії в локальний
git merge BRANCH_NAME -- злиття обраної гілки в поточну
git clone -- скопіювати віддалений репозиторія у локальну папку


git revert -- скасовує зміни в історії комітів проекту, не змінюючи її.
git reset -- це команда, яку ми використовуємо, коли хочемо перемістити репозиторій назад до попереднього коміту, відкидаючи будь-які зміни, зроблені після цього коміту.
git rebase COMMIT_ID -- змінює початковий коміт гілки на вибраний
git cherry-pick COMMIT_ID -- дозволяє вибирати довільні коміти Git за посиланням і додавати їх до поточної робочої HEAD
git stash -- дозволяє на якийсь час «здати в архів» (або відкласти ) зміни, зроблені в робочій копії, щоб ви могли застосувати їх пізніше.


git config --global user.name blabla -- ввести ім'я під яким будуь записані внесені зміни
git config --global user.email blabal@bla -- ввести імейл під яким будуь записані внесені зміни


.gitignore файл - це файл зміни в якому будуть ігноруватися гітом

